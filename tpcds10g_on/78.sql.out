

 Limit
   ->  Incremental Sort
         Sort Key: store_sales.ss_customer_sk, (sum(store_sales.ss_quantity)) DESC, (sum(store_sales.ss_wholesale_cost)) DESC, (sum(store_sales.ss_sales_price)) DESC, ((COALESCE(ws.ws_qty, '0'::bigint) + COALESCE((sum(catalog_sales.cs_quantity)), '0'::bigint))), ((COALESCE(ws.ws_wc, '0'::numeric) + COALESCE((sum(catalog_sales.cs_wholesale_cost)), '0'::numeric))), ((COALESCE(ws.ws_sp, '0'::numeric) + COALESCE((sum(catalog_sales.cs_sales_price)), '0'::numeric))), (round((((sum(store_sales.ss_quantity)) / (COALESCE(ws.ws_qty, '0'::bigint) + COALESCE((sum(catalog_sales.cs_quantity)), '0'::bigint))))::numeric, 2))
         Presorted Key: store_sales.ss_customer_sk
         ->  Merge Left Join
               Merge Cond: ((store_sales.ss_customer_sk = ws.ws_customer_sk) AND (store_sales.ss_item_sk = ws.ws_item_sk))
               Filter: ((COALESCE(ws.ws_qty, '0'::bigint) > 0) OR (COALESCE((sum(catalog_sales.cs_quantity)), '0'::bigint) > 0))
               ->  Sort
                     Sort Key: store_sales.ss_customer_sk, store_sales.ss_item_sk
                     ->  Merge Left Join
                           Merge Cond: ((store_sales.ss_item_sk = catalog_sales.cs_item_sk) AND (store_sales.ss_customer_sk = catalog_sales.cs_bill_customer_sk))
                           ->  GroupAggregate
                                 Group Key: store_sales.ss_item_sk, store_sales.ss_customer_sk
                                 ->  Gather Merge
                                       Workers Planned: 2
                                       ->  Sort
                                             Sort Key: store_sales.ss_item_sk, store_sales.ss_customer_sk
                                             ->  Nested Loop Anti Join
                                                   ->  Parallel Hash Join
                                                         Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                         ->  Parallel Seq Scan on store_sales
                                                         ->  Parallel Hash
                                                               ->  Parallel Seq Scan on date_dim
                                                                     Filter: (d_year = 1999)
                                                   ->  Index Only Scan using store_returns_pkey on store_returns
                                                         Index Cond: ((sr_item_sk = store_sales.ss_item_sk) AND (sr_ticket_number = store_sales.ss_ticket_number))
                           ->  Materialize
                                 ->  GroupAggregate
                                       Group Key: catalog_sales.cs_item_sk, catalog_sales.cs_bill_customer_sk
                                       ->  Gather Merge
                                             Workers Planned: 2
                                             ->  Sort
                                                   Sort Key: catalog_sales.cs_item_sk, catalog_sales.cs_bill_customer_sk
                                                   ->  Nested Loop Anti Join
                                                         ->  Parallel Hash Join
                                                               Hash Cond: (catalog_sales.cs_sold_date_sk = date_dim_1.d_date_sk)
                                                               ->  Parallel Seq Scan on catalog_sales
                                                               ->  Parallel Hash
                                                                     ->  Parallel Seq Scan on date_dim date_dim_1
                                                                           Filter: (d_year = 1999)
                                                         ->  Index Only Scan using catalog_returns_pkey on catalog_returns
                                                               Index Cond: ((cr_item_sk = catalog_sales.cs_item_sk) AND (cr_order_number = catalog_sales.cs_order_number))
               ->  Sort
                     Sort Key: ws.ws_customer_sk, ws.ws_item_sk
                     ->  Subquery Scan on ws
                           ->  GroupAggregate
                                 Group Key: web_sales.ws_item_sk, web_sales.ws_bill_customer_sk
                                 ->  Gather Merge
                                       Workers Planned: 2
                                       ->  Sort
                                             Sort Key: web_sales.ws_item_sk, web_sales.ws_bill_customer_sk
                                             ->  Nested Loop Anti Join
                                                   ->  Parallel Hash Join
                                                         Hash Cond: (web_sales.ws_sold_date_sk = date_dim_2.d_date_sk)
                                                         ->  Parallel Seq Scan on web_sales
                                                         ->  Parallel Hash
                                                               ->  Parallel Seq Scan on date_dim date_dim_2
                                                                     Filter: (d_year = 1999)
                                                   ->  Index Only Scan using web_returns_pkey on web_returns
                                                         Index Cond: ((wr_item_sk = web_sales.ws_item_sk) AND (wr_order_number = web_sales.ws_order_number))
(60 rows)

