                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit
   ->  GroupAggregate
         Group Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
         ->  Nested Loop Anti Join
               Join Filter: (c.c_customer_sk = catalog_sales.cs_ship_customer_sk)
               ->  Nested Loop Anti Join
                     Join Filter: (c.c_customer_sk = web_sales.ws_bill_customer_sk)
                     ->  Gather Merge
                           Workers Planned: 2
                           ->  Sort
                                 Sort Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
                                 ->  Nested Loop
                                       ->  Parallel Hash Semi Join
                                             Hash Cond: (c.c_customer_sk = store_sales.ss_customer_sk)
                                             ->  Parallel Hash Join
                                                   Hash Cond: (c.c_current_addr_sk = ca.ca_address_sk)
                                                   ->  Parallel Seq Scan on customer c
                                                   ->  Parallel Hash
                                                         ->  Parallel Seq Scan on customer_address ca
                                                               Filter: (ca_state = ANY ('{AR,SD,KY}'::bpchar[]))
                                             ->  Parallel Hash
                                                   ->  Parallel Hash Join
                                                         Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                         ->  Parallel Seq Scan on store_sales
                                                         ->  Parallel Hash
                                                               ->  Parallel Seq Scan on date_dim
                                                                     Filter: ((d_moy >= 4) AND (d_moy <= 6) AND (d_year = 2003))
                                       ->  Index Scan using customer_demographics_pkey on customer_demographics
                                             Index Cond: (cd_demo_sk = c.c_current_cdemo_sk)
                     ->  Materialize
                           ->  Gather
                                 Workers Planned: 2
                                 ->  Parallel Hash Join
                                       Hash Cond: (web_sales.ws_sold_date_sk = date_dim_1.d_date_sk)
                                       ->  Parallel Seq Scan on web_sales
                                       ->  Parallel Hash
                                             ->  Parallel Seq Scan on date_dim date_dim_1
                                                   Filter: ((d_moy >= 4) AND (d_moy <= 6) AND (d_year = 2003))
               ->  Materialize
                     ->  Gather
                           Workers Planned: 2
                           ->  Parallel Hash Join
                                 Hash Cond: (catalog_sales.cs_sold_date_sk = date_dim_2.d_date_sk)
                                 ->  Parallel Seq Scan on catalog_sales
                                 ->  Parallel Hash
                                       ->  Parallel Seq Scan on date_dim date_dim_2
                                             Filter: ((d_moy >= 4) AND (d_moy <= 6) AND (d_year = 2003))
(47 rows)

