                                                                                                                                                                  QUERY PLAN                                                                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit
   CTE year_total
     ->  Append
           ->  Finalize GroupAggregate
                 Group Key: customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_country, customer.c_login, customer.c_email_address, date_dim.d_year
                 ->  Gather Merge
                       Workers Planned: 2
                       ->  Sort
                             Sort Key: customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_country, customer.c_login, customer.c_email_address, date_dim.d_year
                             ->  Parallel Hash Join
                                   Hash Cond: (store_sales.ss_customer_sk = customer.c_customer_sk)
                                   ->  Parallel Hash Join
                                         Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                         ->  Partial HashAggregate
                                               Group Key: store_sales.ss_customer_sk, store_sales.ss_sold_date_sk
                                               ->  Parallel Seq Scan on store_sales
                                         ->  Parallel Hash
                                               ->  Parallel Seq Scan on date_dim
                                   ->  Parallel Hash
                                         ->  Parallel Seq Scan on customer
           ->  Finalize GroupAggregate
                 Group Key: customer_1.c_customer_id, customer_1.c_first_name, customer_1.c_last_name, customer_1.c_preferred_cust_flag, customer_1.c_birth_country, customer_1.c_login, customer_1.c_email_address, date_dim_1.d_year
                 ->  Gather Merge
                       Workers Planned: 2
                       ->  Sort
                             Sort Key: customer_1.c_customer_id, customer_1.c_first_name, customer_1.c_last_name, customer_1.c_preferred_cust_flag, customer_1.c_birth_country, customer_1.c_login, customer_1.c_email_address, date_dim_1.d_year
                             ->  Parallel Hash Join
                                   Hash Cond: (web_sales.ws_bill_customer_sk = customer_1.c_customer_sk)
                                   ->  Parallel Hash Join
                                         Hash Cond: (web_sales.ws_sold_date_sk = date_dim_1.d_date_sk)
                                         ->  Partial HashAggregate
                                               Group Key: web_sales.ws_bill_customer_sk, web_sales.ws_sold_date_sk
                                               ->  Parallel Seq Scan on web_sales
                                         ->  Parallel Hash
                                               ->  Parallel Seq Scan on date_dim date_dim_1
                                   ->  Parallel Hash
                                         ->  Parallel Seq Scan on customer customer_1
   ->  Sort
         Sort Key: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_login
         ->  Nested Loop
               Join Filter: ((t_s_secyear.customer_id = t_w_secyear.customer_id) AND (CASE WHEN (t_w_firstyear.year_total > '0'::numeric) THEN (t_w_secyear.year_total / t_w_firstyear.year_total) ELSE 0.0 END > CASE WHEN (t_s_firstyear.year_total > '0'::numeric) THEN (t_s_secyear.year_total / t_s_firstyear.year_total) ELSE 0.0 END))
               ->  Nested Loop
                     Join Filter: (t_s_firstyear.customer_id = t_s_secyear.customer_id)
                     ->  Nested Loop
                           Join Filter: (t_s_firstyear.customer_id = t_w_firstyear.customer_id)
                           ->  CTE Scan on year_total t_s_firstyear
                                 Filter: ((year_total > '0'::numeric) AND (sale_type = 's'::text) AND (dyear = 2001))
                           ->  CTE Scan on year_total t_w_firstyear
                                 Filter: ((year_total > '0'::numeric) AND (sale_type = 'w'::text) AND (dyear = 2001))
                     ->  CTE Scan on year_total t_s_secyear
                           Filter: ((sale_type = 's'::text) AND (dyear = 2002))
               ->  CTE Scan on year_total t_w_secyear
                     Filter: ((sale_type = 'w'::text) AND (dyear = 2002))
(53 rows)

