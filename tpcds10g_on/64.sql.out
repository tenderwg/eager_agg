                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: cs1.product_name, cs1.store_name, cs2.cnt, cs1.s1, cs2.s1
   CTE cross_sales
     ->  GroupAggregate
           Group Key: item.i_item_sk, store.s_store_name, store.s_zip, ad1.ca_street_number, ad1.ca_street_name, ad1.ca_city, ad1.ca_zip, ad2.ca_street_number, ad2.ca_street_name, ad2.ca_city, ad2.ca_zip, d1.d_year, d2.d_year, d3.d_year
           ->  Incremental Sort
                 Sort Key: item.i_item_sk, store.s_store_name, store.s_zip, ad1.ca_street_number, ad1.ca_street_name, ad1.ca_city, ad1.ca_zip, ad2.ca_street_number, ad2.ca_street_name, ad2.ca_city, ad2.ca_zip, d1.d_year, d2.d_year, d3.d_year
                 Presorted Key: item.i_item_sk
                 ->  Nested Loop
                       ->  Nested Loop
                             Join Filter: (cd1.cd_marital_status <> cd2.cd_marital_status)
                             ->  Nested Loop
                                   ->  Nested Loop
                                         ->  Nested Loop
                                               ->  Nested Loop
                                                     ->  Nested Loop
                                                           ->  Nested Loop
                                                                 ->  Nested Loop
                                                                       ->  Nested Loop
                                                                             ->  Nested Loop
                                                                                   ->  Nested Loop
                                                                                         ->  Nested Loop
                                                                                               ->  Nested Loop
                                                                                                     ->  Nested Loop
                                                                                                           Join Filter: (store_sales.ss_item_sk = item.i_item_sk)
                                                                                                           ->  Nested Loop
                                                                                                                 Join Filter: (store_returns.sr_item_sk = item.i_item_sk)
                                                                                                                 ->  Nested Loop
                                                                                                                       ->  GroupAggregate
                                                                                                                             Group Key: catalog_sales.cs_item_sk
                                                                                                                             Filter: (sum(catalog_sales.cs_ext_list_price) > ('2'::numeric * sum(((catalog_returns.cr_refunded_cash + catalog_returns.cr_reversed_charge) + catalog_returns.cr_store_credit))))
                                                                                                                             ->  Gather Merge
                                                                                                                                   Workers Planned: 2
                                                                                                                                   ->  Sort
                                                                                                                                         Sort Key: catalog_sales.cs_item_sk
                                                                                                                                         ->  Parallel Hash Join
                                                                                                                                               Hash Cond: ((catalog_sales.cs_item_sk = catalog_returns.cr_item_sk) AND (catalog_sales.cs_order_number = catalog_returns.cr_order_number))
                                                                                                                                               ->  Parallel Seq Scan on catalog_sales
                                                                                                                                               ->  Parallel Hash
                                                                                                                                                     ->  Parallel Seq Scan on catalog_returns
                                                                                                                       ->  Index Scan using item_pkey on item
                                                                                                                             Index Cond: (i_item_sk = catalog_sales.cs_item_sk)
                                                                                                                             Filter: ((i_current_price >= '22'::numeric) AND (i_current_price <= '32'::numeric) AND (i_current_price >= '23'::numeric) AND (i_current_price <= '37'::numeric) AND (i_color = ANY ('{brown,deep,tomato,cornsilk,gainsboro,dodger}'::bpchar[])))
                                                                                                                 ->  Index Only Scan using store_returns_pkey on store_returns
                                                                                                                       Index Cond: (sr_item_sk = catalog_sales.cs_item_sk)
                                                                                                           ->  Index Scan using store_sales_pkey on store_sales
                                                                                                                 Index Cond: ((ss_item_sk = store_returns.sr_item_sk) AND (ss_ticket_number = store_returns.sr_ticket_number))
                                                                                                     ->  Index Only Scan using promotion_pkey on promotion
                                                                                                           Index Cond: (p_promo_sk = store_sales.ss_promo_sk)
                                                                                               ->  Index Scan using customer_address_pkey on customer_address ad1
                                                                                                     Index Cond: (ca_address_sk = store_sales.ss_addr_sk)
                                                                                         ->  Index Scan using customer_pkey on customer
                                                                                               Index Cond: (c_customer_sk = store_sales.ss_customer_sk)
                                                                                   ->  Index Scan using customer_address_pkey on customer_address ad2
                                                                                         Index Cond: (ca_address_sk = customer.c_current_addr_sk)
                                                                             ->  Index Scan using store_pkey on store
                                                                                   Index Cond: (s_store_sk = store_sales.ss_store_sk)
                                                                       ->  Index Scan using customer_demographics_pkey on customer_demographics cd1
                                                                             Index Cond: (cd_demo_sk = store_sales.ss_cdemo_sk)
                                                                 ->  Index Scan using household_demographics_pkey on household_demographics hd1
                                                                       Index Cond: (hd_demo_sk = store_sales.ss_hdemo_sk)
                                                           ->  Index Only Scan using income_band_pkey on income_band ib1
                                                                 Index Cond: (ib_income_band_sk = hd1.hd_income_band_sk)
                                                     ->  Index Scan using household_demographics_pkey on household_demographics hd2
                                                           Index Cond: (hd_demo_sk = customer.c_current_hdemo_sk)
                                               ->  Index Only Scan using income_band_pkey on income_band ib2
                                                     Index Cond: (ib_income_band_sk = hd2.hd_income_band_sk)
                                         ->  Index Scan using date_dim_pkey on date_dim d1
                                               Index Cond: (d_date_sk = store_sales.ss_sold_date_sk)
                                   ->  Index Scan using date_dim_pkey on date_dim d3
                                         Index Cond: (d_date_sk = customer.c_first_shipto_date_sk)
                             ->  Index Scan using customer_demographics_pkey on customer_demographics cd2
                                   Index Cond: (cd_demo_sk = customer.c_current_cdemo_sk)
                       ->  Index Scan using date_dim_pkey on date_dim d2
                             Index Cond: (d_date_sk = customer.c_first_sales_date_sk)
   ->  Nested Loop
         Join Filter: ((cs2.cnt <= cs1.cnt) AND (cs1.item_sk = cs2.item_sk) AND ((cs1.store_name)::text = (cs2.store_name)::text) AND (cs1.store_zip = cs2.store_zip))
         ->  CTE Scan on cross_sales cs1
               Filter: (syear = 2000)
         ->  CTE Scan on cross_sales cs2
               Filter: (syear = 2001)
(81 rows)

