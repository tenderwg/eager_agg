

 Limit
   ->  Sort
         Sort Key: (substr((reason.r_reason_desc)::text, 1, 20)), (avg(web_sales.ws_quantity)), (avg(web_returns.wr_refunded_cash)), (avg(web_returns.wr_fee))
         ->  GroupAggregate
               Group Key: reason.r_reason_desc
               ->  Sort
                     Sort Key: reason.r_reason_desc
                     ->  Nested Loop
                           Join Filter: (reason.r_reason_sk = web_returns.wr_reason_sk)
                           ->  Nested Loop
                                 ->  Nested Loop
                                       Join Filter: (web_page.wp_web_page_sk = web_sales.ws_web_page_sk)
                                       ->  Gather
                                             Workers Planned: 2
                                             ->  Nested Loop
                                                   Join Filter: ((((customer_address.ca_state = ANY ('{VA,IL,TN}'::bpchar[])) AND (web_sales.ws_net_profit >= '100'::numeric) AND (web_sales.ws_net_profit <= '200'::numeric)) OR ((customer_address.ca_state = ANY ('{WV,SD,TX}'::bpchar[])) AND (web_sales.ws_net_profit >= '150'::numeric) AND (web_sales.ws_net_profit <= '300'::numeric)) OR ((customer_address.ca_state = ANY ('{CO,CA,AL}'::bpchar[])) AND (web_sales.ws_net_profit >= '50'::numeric) AND (web_sales.ws_net_profit <= '250'::numeric))) AND (((cd1.cd_marital_status = 'M'::bpchar) AND (cd1.cd_education_status = 'Advanced Degree'::bpchar) AND (web_sales.ws_sales_price >= 100.00) AND (web_sales.ws_sales_price <= 150.00)) OR ((cd1.cd_marital_status = 'D'::bpchar) AND (cd1.cd_education_status = 'College'::bpchar) AND (web_sales.ws_sales_price >= 50.00) AND (web_sales.ws_sales_price <= 100.00)) OR ((cd1.cd_marital_status = 'S'::bpchar) AND (cd1.cd_education_status = '2 yr Degree'::bpchar) AND (web_sales.ws_sales_price >= 150.00) AND (web_sales.ws_sales_price <= 200.00))))
                                                   ->  Nested Loop
                                                         Join Filter: ((cd1.cd_marital_status = cd2.cd_marital_status) AND (cd1.cd_education_status = cd2.cd_education_status))
                                                         ->  Parallel Hash Join
                                                               Hash Cond: (web_returns.wr_refunded_addr_sk = customer_address.ca_address_sk)
                                                               ->  Parallel Hash Join
                                                                     Hash Cond: (web_returns.wr_refunded_cdemo_sk = cd1.cd_demo_sk)
                                                                     ->  Parallel Seq Scan on web_returns
                                                                     ->  Parallel Hash
                                                                           ->  Parallel Seq Scan on customer_demographics cd1
                                                                                 Filter: (((cd_marital_status = 'M'::bpchar) AND (cd_education_status = 'Advanced Degree'::bpchar)) OR ((cd_marital_status = 'D'::bpchar) AND (cd_education_status = 'College'::bpchar)) OR ((cd_marital_status = 'S'::bpchar) AND (cd_education_status = '2 yr Degree'::bpchar)))
                                                               ->  Parallel Hash
                                                                     ->  Parallel Seq Scan on customer_address
                                                                           Filter: (((ca_country)::text = 'United States'::text) AND ((ca_state = ANY ('{VA,IL,TN}'::bpchar[])) OR (ca_state = ANY ('{WV,SD,TX}'::bpchar[])) OR (ca_state = ANY ('{CO,CA,AL}'::bpchar[]))))
                                                         ->  Index Scan using customer_demographics_pkey on customer_demographics cd2
                                                               Index Cond: (cd_demo_sk = web_returns.wr_returning_cdemo_sk)
                                                   ->  Index Scan using web_sales_pkey on web_sales
                                                         Index Cond: ((ws_item_sk = web_returns.wr_item_sk) AND (ws_order_number = web_returns.wr_order_number))
                                                         Filter: ((((ws_sales_price >= 100.00) AND (ws_sales_price <= 150.00)) OR ((ws_sales_price >= 50.00) AND (ws_sales_price <= 100.00)) OR ((ws_sales_price >= 150.00) AND (ws_sales_price <= 200.00))) AND (((ws_net_profit >= '100'::numeric) AND (ws_net_profit <= '200'::numeric)) OR ((ws_net_profit >= '150'::numeric) AND (ws_net_profit <= '300'::numeric)) OR ((ws_net_profit >= '50'::numeric) AND (ws_net_profit <= '250'::numeric))))
                                       ->  Seq Scan on web_page
                                 ->  Index Scan using date_dim_pkey on date_dim
                                       Index Cond: (d_date_sk = web_sales.ws_sold_date_sk)
                                       Filter: (d_year = 2002)
                           ->  Seq Scan on reason
(39 rows)

