tpcds10g=# explain(costs on, analyze)select  i_brand_id brand_id, i_brand brand, i_manufact_id, i_manufact,
 sum(ss_ext_sales_price) ext_price
 from date_dim, store_sales, item,customer,customer_address,store
 where d_date_sk = ss_sold_date_sk
   and ss_item_sk = i_item_sk
   and i_manager_id=13
   and d_moy=12
   and d_year=2000
   and ss_customer_sk = c_customer_sk 
   and c_current_addr_sk = ca_address_sk
   and substr(ca_zip,1,5) <> substr(s_zip,1,5) 
   and ss_store_sk = s_store_sk 
 group by i_brand
      ,i_brand_id
      ,i_manufact_id
      ,i_manufact
 order by ext_price desc
         ,i_brand
         ,i_brand_id
         ,i_manufact_id
         ,i_manufact
limit 100 ;
                                                                                            QUERY PLAN                                                                 
                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------
 Limit  (cost=667022.41..667022.66 rows=100 width=142) (actual time=275.289..334.613 rows=100 loops=1)
   ->  Sort  (cost=667022.41..667022.87 rows=187 width=142) (actual time=275.288..334.607 rows=100 loops=1)
         Sort Key: (sum(store_sales.ss_ext_sales_price)) DESC, item.i_brand, item.i_brand_id, item.i_manufact_id, item.i_manufact
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Finalize GroupAggregate  (cost=666986.48..667015.35 rows=187 width=142) (actual time=272.649..334.318 rows=900 loops=1)
               Group Key: item.i_brand, item.i_brand_id, item.i_manufact_id, item.i_manufact
               ->  Gather Merge  (cost=666986.48..667010.21 rows=187 width=142) (actual time=272.644..333.847 rows=901 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=665986.46..665988.60 rows=78 width=142) (actual time=266.379..267.476 rows=300 loops=3)
                           Group Key: item.i_brand, item.i_brand_id, item.i_manufact_id, item.i_manufact
                           ->  Sort  (cost=665986.46..665986.65 rows=78 width=116) (actual time=266.367..266.583 rows=5081 loops=3)
                                 Sort Key: item.i_brand, item.i_brand_id, item.i_manufact_id, item.i_manufact
                                 Sort Method: quicksort  Memory: 1120kB
                                 Worker 0:  Sort Method: quicksort  Memory: 737kB
                                 Worker 1:  Sort Method: quicksort  Memory: 745kB
                                 ->  Nested Loop  (cost=2087.90..665984.00 rows=78 width=116) (actual time=3.456..262.609 rows=5081 loops=3)
                                       Join Filter: (substr((customer_address.ca_zip)::text, 1, 5) <> substr((store.s_zip)::text, 1, 5))
                                       Rows Removed by Join Filter: 270
                                       ->  Nested Loop  (cost=2087.48..665919.29 rows=79 width=131) (actual time=3.440..246.953 rows=5351 loops=3)
                                             ->  Hash Join  (cost=2087.06..665856.31 rows=82 width=131) (actual time=3.427..231.180 rows=5412 loops=3)
                                                   Hash Cond: (store_sales.ss_store_sk = store.s_store_sk)
                                                   ->  Parallel Hash Join  (cost=2079.76..665848.78 rows=86 width=124) (actual time=3.328..230.213 rows=5543 loops=3)
                                                         Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                         ->  Nested Loop  (cost=10.99..663221.29 rows=212829 width=128) (actual time=0.153..218.996 rows=168268 loops=3
)
                                                               ->  Parallel Seq Scan on item  (cost=0.00..7575.25 rows=754 width=114) (actual time=0.037..13.223 rows=606 loops=3)
                                                                     Filter: (i_manager_id = 13)
                                                                     Rows Removed by Filter: 33394
                                                               ->  Bitmap Heap Scan on store_sales  (cost=10.99..866.09 rows=347 width=22) (actual time=0.035..0.308 rows=278 loops=1819)
                                                                     Recheck Cond: (ss_item_sk = item.i_item_sk)
                                                                     Heap Blocks: exact=227149
                                                                     ->  Bitmap Index Scan on store_sales_pkey  (cost=0.00..10.90 rows=347 width=0) (actual time=0.017..0.017 rows=278 loops=1819)
                                                                           Index Cond: (ss_item_sk = item.i_item_sk)
                                                         ->  Parallel Hash  (cost=2068.55..2068.55 rows=18 width=4) (actual time=2.755..2.755 rows=10 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 40kB
                                                               ->  Parallel Seq Scan on date_dim  (cost=0.00..2068.55 rows=18 width=4) (actual time=2.279..2.716 rows=10 loops=3)
                                                                     Filter: ((d_moy = 12) AND (d_year = 2000))
                                                                     Rows Removed by Filter: 24339
                                                   ->  Hash  (cost=6.02..6.02 rows=102 width=15) (actual time=0.073..0.074 rows=102 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 13kB
                                                         ->  Seq Scan on store  (cost=0.00..6.02 rows=102 width=15) (actual time=0.017..0.057 rows=102 loops=3)
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.77 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=16236)
                                                   Index Cond: (c_customer_sk = store_sales.ss_customer_sk)
                                       ->  Index Scan using customer_address_pkey on customer_address  (cost=0.42..0.80 rows=1 width=15) (actual time=0.002..0.002 rows=1 loops=16052)
                                             Index Cond: (ca_address_sk = customer.c_current_addr_sk)
 Planning Time: 3.315 ms
 Execution Time: 334.796 ms
(47 rows)

